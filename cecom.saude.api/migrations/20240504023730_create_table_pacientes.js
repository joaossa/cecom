// Migration for table: pacientes
exports.up = function(knex) {
  return knex.schema.createTable('pacientes', table => {
    table.integer('codigomaster').notNullable().references('codigo').inTable('master'); // Foreign key to master table
    table.increments('codigopaciente'); // Handles the int4 GENERATED BY DEFAULT AS IDENTITY
    table.string('nomepaciente', 100).notNullable();
    table.integer('codigoocupacao').nullable().references('codigo').inTable('ocupacoes'); // Optional foreign key to ocupacoes
    table.timestamp('dt_admissao').nullable();
    table.integer('cd_escolaridade').nullable().references('codigo').inTable('escolaridades'); // Optional foreign key to escolaridades
    table.string('nm_responsavel', 100).nullable();
    table.string('tp_parentesco', 1).notNullable().defaultTo('R').check('tp_parentesco IN (\'P\', \'M\', \'T\', \'F\', \'C\', \'O\', \'R\')'); // Default to 'R' (Sou o paciente)
    table.integer('cd_escolaridaderesponsavel').nullable().references('codigo').inTable('escolaridades'); // Optional foreign key to escolaridades
    table.integer('codigoocupacaoresponsavel').nullable().references('codigo').inTable('ocupacoes'); // Optional foreign key to ocupacoes
    table.string('cpfresponsavel', 14).nullable();
    table.primary(['codigomaster', 'codigopaciente']); // Composite primary key
  });
};

exports.down = function(knex) {
  return knex.schema.dropTable('pacientes');
};